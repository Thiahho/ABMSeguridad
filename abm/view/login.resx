<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAjcAAAI3CAYAAABnKHquAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABy4SURBVHhe7d0LdiRJeS9wltBL6CXo8PCYd2EYpufd
        9swCegm9AlNgjDFgBMaYrhJY4DGMB3OnuXPx5c4dn1NL6CVoCVpC+vtkpR0EkVWZJalVVfr9zvnOTEuZ
        kZFZdRT/inzUxwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AADuqC//bHn/yz9bzP7sp1Eni9mXllGLxWz2JOoni9kX/zHqx4vZF/5hMfv8j6L+fjH73A+jfrCYffY4
        6vuL2Wf+Lup7i9mnvxv1ncXsT/92MXvh209mL/zNk9mffCvqr5/MPvXNqL96MvvkN6K+/mT2ifmT2ce/
        FvWXF3XvsjsAAJu99C/L+y+9s3z41XeW86/+83L14i+Wz178+bL7yumy+/I/Rf1s0UW46SLcdBFuugg3
        XYSbLsJNF+Gmi3DTRbjpItx0EW66CDddhJsuwk0X4aaLcNNFuOki3HQRbroIN12Emy7CTRfhpotw00W4
        6SLcdBFuugg3XYSbLsJNF8Gmr7OouaADADS9/O7y6MGvlscPfrk8e+mXyy4CThfhpotw00W46XYw3PT1
        LOrocjcAgLvslV8v70fNX35vefbyvy67B+9G/SqCzX6Fm6ycxTGDAwB31au/Wc5e/bflaVQX4aaLcNPt
        ebjJOr7cPQDgrnj9/eX91/7X8mlUFwGnO7Bwc365mwDAoXv9t8t7rz9dHkd1r70fdZjhJmt2ucsAwKF6
        438vZ2/8dnkWAae7A+FmfrnbAMAhevP/nBy/8cGyi4DTCTcAwN56+LuTexFsVlHdHQs3jy8PAQBwKB7+
        +8lRhJuzN3930t3BcOOaGwA4JH/+fyPY/PvJeVR3B8ONu6UA4JD8+e9PjiLcnEd1dzTcuN4GAA7FX/y/
        CDa/j2Dz+5PujoabZ5eHAgDYd3/x4cm9CDfnUd0dDTerKF+9AACH4K3/f3LvrQ9PnkXA6e5guHka9ejy
        UAAAhyDCzWlU9xzCzXmEm6cRbuYRbh5GuJlFuLl/2Q0AgKt7+6OTR299dNLdYLg5i3DzOMLN0eUmAQBu
        xtv/cXI/ws35DYWb0wg3nhcDADw/EW5WUd01h5tVhBunmgCA5ytCzcMMNtcYbs4j3Dy8bB4A4PmKUHN2
        jeHmaYQbt1EDALcjAs2jPthcQ7jxRF8A4HZFoPnvWZsrhptrfT7MS+8sZy/+Yvn4xZ9f3Co+//JPF/Mv
        LRfz2ZPFw9lP3DIOADREmPmDWZsrhJtrCTYvv7d89ODd5dMHedt4/zycn18+5O+n//Vwv3yw3xd/sui+
        8OPF2ed/tDj+/A8FHQDgUoSZZ9cQbo4vm9vaq79ZPs6LkF/JO6zy1vFx4ebiacX5pOLPHi9Wn/2+kAMA
        d1oEmaM62GRNDDery+a2Eusfvfb+8tnF9Tp5l9X24ebi6xc+/d2Fa34A4K6KIHNaB5usCeHmPMLJ1rMl
        b35w8jDWP784rXV94Sa/U+rpC9/2pZcAcOdEkDmvg03WhHDz+LKpyaKdRxft5OzP9Yeb/MLMZy98S8AB
        gDsjQsysDjV9jQw3Z5dNTRbtHD3s27m5cJPfBP70cpMAwKGLEHNch5q+xoSbNz842eruqGjrXrR1/pzC
        Tfepbz5xDQ4A3AURYv7oLqm+RoSb88tmJov2Ti/aen7hpvvkN564iwoADl0r1PQ1Itxsdet3tHf/or3n
        H26udEcXALDjIsAMXm+TNSLcHF02NclbH56c3lK46T7xdbM3AHCwIsA8rgNNWRvCzVanpKLNexdt3la4
        mT+58oMGAYAdFQFm8GLirA3hZqtTPNHmo1sON1vf3QUA7LgIMKs60JS1LtxEKNnq7qO3Pzo5veVw0338
        a05NAcBBigBzlXCz1YP7ItysdiDcPLzsDgBwSFqBpqwN4WZ22cwkF+3efrjxzBsAOER1mKlLuAEA9kod
        ZuoSbgCAvVKHmbqEGwBgr9Rhpq4N4War75R6+6OTsx0IN1t/izkAsMNagaasDeFm21vBd+Fuqa1mnQCA
        HRcB5qwONGWtCzdv/u7k9LKZSSLczG873Fx2BQA4NBFgtn7OTYSbZ5fNTBJtHt1yuHl62RUA4NBEgHla
        B5qyNoSbDCX3Lpua5K0PT85uLdx8/clW1woBAHsgAsy8DjRljQg3WwWFaO/RLYUb3ysFAIcsAszDOtCU
        NSLcbH2KJ9o7u4VwY9YGAA5ZBJj7daApa0S46d78YLtTU9HW7DmHm62uEQIA9kyEmME7pkaGm60fiBdt
        HT+ncHMe4cY3gQPAXRAh5rQONX2NCTdvfLA8j2Cy1exNinZWNx1uXviW59oAwJ0RIWbwupuR4SaDydaz
        N9HGvTc/OFndULg5j3DjOhsAuGsiyJzXwSZrQrg5f/23yyud9on1j6853Jx9+juLo8vmAYC7JIJM89TU
        hHDTRThZXTa3tdfeX85e/c3y7BrCzelnvrfY+lQZALDnIsjM6mCTNTHc5Gmla/m27Vd+vXz08nvLsy3C
        zennfrBw4TAAcBFwnl1DuOlee395bde4PHh3eRThZh7hZvXiL5ZnjXCzinBzGuHm0Rd+ZKYGAChEmHl0
        TeEmr5txES8AcPsi0PzBM2+uEG66V38j4AAAtywCzR9ce3PFcJN3PR1fNg0AcDsi1KyuMdx0r/x6uXrl
        vavdJg4AsLUINfl9UxfPvbmmcNO9/N7y/OV/Xc4fvLv9k4wBALYWwebxNYebLsJNF+Hm7MGvlo9f+qWQ
        AwA8Z29/dLK6gXDTRbjpItycv/Qvy9OvvrN8eLk5AICbFcHmXgSb8xsKN12Emy7CTT6c7/zFXyyfvvjz
        5fwrp8vZV/7J9TkAwA2JYHP01ocn5zccbroINxdPH45w818P6fvZovuzn0adLM6+tFysvrRYrPKBfbOf
        LFZf/MeoHy9WX/iHxerzP4r6+8Xqcz+M+sFi9dnjqO8vVp/5u6jvLVaf/m7UdxarP/3bxeqFbz9ZvfA3
        T1Z/8q2ov36y+tQ3o/7qyeqT34j6+pPVJ+ZPVh//WtRf/ncdRwlaAHBoItw8usVwc/Ek4gg3F1+1EOGm
        i3DTRbjpItxcfOVChJuL75SKcHPxvVIRbi6+ODPCzcU3g0e4yW8H7yLcdBFuugg3XYSbLsJNF+Gmi3DT
        RbjpItx0EW66CDR1uZ0dAA5NBJtHdzjcZJ1eHgoA4FBEsHl0h8NNlicuA8ChiWDz6A6Hm7PLwwAAHJII
        NrOHvzs5v4PhJuvo8jAAAIckws1RBJtndzDcODUFAIcqgs29qOM7Fm7ml7sPAByqCDYP3/jt8ly4AQAO
        RgSbexFsju9AuPF1EQBwl7z+/vJ+BJunBxxufOEnANxFEWyOIticHli48SA/ALjrItjcj5pHuDnb83Bz
        HuV7pgCA//Hyu8ujCDbHD365PNuzcJPBxvNtAIBhEWzuv/TO8lEEm+Oo1Q6Hm6dRZmwAgOki2NyLmkW4
        mUW4mUWweRw1j3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Az
        j3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3Azj3AzjzDzOGoW5eJhAAAAAAAAAAAAAAAAAAAAAAAA
        ACZ5FDUvCgBgr62iuqIAAPaacAMAHBThBgA4KMINAHBQhBsA4KAINwDAQRFuAIAruReVz5Z5GpXBoqz8
        WT5r5mHU/ahNjqLKZ9T0levndsa4jnAzq2qMftmx/QQAdlCGjvOoMkwM1bOoIRmOzqJa65V1GrUpPIwJ
        NxlCymUyQOXPsv3y533lPuYy/bbLQNfa/9yXcvkxMvw9jirDYV/Z1thw2IesrF72I1+rbKesXH6q7Ee5
        jb62aQsAdkoOaPWgvq5ykG4ZChRDlcFh3UCf2ymXb6n7PiWgZX+nLD8m4GTQaK1f13HUuvbqfc/9zABW
        /qyuXGfd8czfZRu5L631y+pDIADspXqmJQe2HPhzcMtZgvJrEHJwzIG5lsuUbWRlu/1sxdCgum4WaJtw
        U1fuy5jBfExtGuynhrvcvyH1vo+tPOZDoWlqiM1a9/oAwE7K8FIOZptmU4bUMyB5WqYlT3nUYSqDUcu2
        4SZDRu5XLftUL5uV28nfZVu9PAZ1WMl9HNIKd7l+327+txV+hgLTULjJPuTvsq2hwDjU5lC46UPoUAgc
        en0AYCfVA245wI9VB6Rsc516kM1BumWbcLNpdqVusxWCSvXyQ8enDGwZQIauW8mfl0FwKDDV281jOtRm
        HayyLy05o5P933RNTc7Mle2ZvQFgr9SD8jbqwXBMQKpnCVrKAX6ob1PDTR0ENi1fB7fWjFS9zKaZjjHH
        a0ywK9XHc8z1QevUs2sAsDfKASwH1G1MHYjTmBmjst2hvtXhphU+SlPD0Jjl67CyyZg2px7TbKNcvnU8
        p8jZtLI9ANgLeXqiHMA2nU4aUrYx9hTGmMF4m3CzaVAfEyxq5fKti6nH9LOUsyplm5vCzdBpplI9I3XV
        cFO/PgCwF7YZ6FvKNsYM7qkePFuncsaEhucdblr9KK+hyXCX2+hr6OLsTW2O2ffSNvvVkoE32xpz2hAA
        ds51DYhlG2MG4lSHm9a2y+s+htqt9yH/vc42+1wu3+pH+fttqjVjdpPhJgNM/j7bLbezrgBgL+xSuGnN
        3JS/H2o3r7Epl9vHcNPqQxk6xhzTMfuVp8PKdqcUAOyFekBsXU8yRtnGmIE41eGmFUrK3w+1O6ad0lXD
        TesYlb/PU1TZ177qu45a1epD+fsxx3TMftWnmrLyZ9l+zh7lOlkZGJ2WAmAv1Re2jhlEW8prTsZc/JrG
        3C1V/n6obzkYl8vddLhpLV/+fttjWJvaZr1f9V1j9e3qGV7WPawxt1kuDwB7oxzAtn3OTT0QjnnGypiZ
        gfL3uxxuynC3K+GmPg717epTH14IAHujHsQ2PYCupQ4Ym9rIGYNy+Qw6LeUyuxxubiIIlO1dR7ip+7gp
        gN7EPgHAc1FfkJuzEJsCQq0OK9nG0CP+c1CtZ22GHrxXLnNb4WbM8nUftgmItbI94QYAJshBrjyt0lde
        O5NPqc2BOysHu75ag3f9RNtsM6+ryeCSA22eBsl26gtsc7mhgbZcLrfbUgeLelCvjQkrpTHL1w9DzH3a
        dNpnk7K9oX0v5WtSrlMfh/q01KYAltsslweAvVIP4Juq9VyW1ozMmFoXRsrldjncpDrcZWWQy37nOq3K
        4zh0h1rZzphwk+2V69THoQ4/GcDyZ/m6ZeXyfQBtvY6bwhAA7Jycfag/rQ/V0GCbg+TYNnLg3xREyuWH
        trlpUK+NDSu9sctvG+6G9mvMMqVNxyH715qhm1JD10YBwE7LkJOnknKwzNmInFnI/8/KT+85aOZAuU75
        BNx+wM+BNf+dsxVjZwFy+b6GZjiyrXK5oWt9ejcVblIel/oW902VfW4Zs0wp+1WuU4eblD8bG3BaQU24
        AYADkYEpg0HWumfD9DLk9Kd4MpRlOCmvX+qvQ2oFkF6/bNaYMDg25OXPM4DVIacPn9m3fh9z2fJ0W/4e
        AOAgZBDbNCsGAAAAAAAAAAAAAAAAAACwB8pn1WSte67NVZTPq8nKbe2jPD71vtzUMQMAtlAP1DcVOp7X
        dm6acAMAO64eqIWb9YQbANhx9UAt3Kwn3ADAjqsHauFmPeEGAHZchoyybmqgrgOBcAMA7LU6EAg3AMBe
        qwOBcAMA7LU6EAg3AOy0/ONe13W6F1W2fRR1ner2s/Jnh+a6j1sp2y6P3/2oUh0Itgk3rdfpJvap3kb5
        Xsh/1/uSPwNgz+XAdRz1LKr+Q19XLrOKysHsUdRYuY3TqLOoVrtZ2e6UNks5ID2NOo9qtd1XbmNd1YNr
        Hpfy9/nvsXJfynWzhuR262Vbx+JhVB7Hfj9rdRtj+5sD/uOoTe+BfP3yONc/Xxdu8rXPfcllsk/r3gN9
        5Ta2DRn9+3nTdvr3cv1z4QZgz+WAVv9xn1Jj5EDTWneoclAa+wk+B+XWALVt1QNb3Xb+e6wczMt1s4bk
        dutly8CQ4aA1WNfq34/pb257TOBYV+vCTWv5sZVBbop8P28KuJtKuAHYY1cNNlmbtD7lj6kcoDYFnAw2
        Y2abptSuhZucqVkXPGr17zf1N9uv19mmbircZI2dfZoaoodKuAHYUzl13/rDnpWDaQ6KZQ2FiHVag3tf
        ZdtDg3cGnPL6iFp+qm+tk4NcDto5SGXlrEdr2ayyH1l1oMqf1cuPddVwM2YGolb/fl1/89iu20Z/TPpq
        LdPX1HDTnxIau418v67TOn595T6W29gUiIUbgD3V+pSbsyybBpGUASAHgHUDWis85SDTuo4kZZutQWdo
        G632MySt639rlmLdPqR6wM1/j3XVcDNUeRzztcqZt1q97Lr+DoXDbHcoVObxnXoc+6A55r01NBvX2tdS
        KyDnz3LbQ/I913qNhBuAPVUP2jkQXKc6POWgOeY0Uz1I5XotrVNq6wayXj2gD7Xf25Vwk/3Mvm/ax3q9
        df3NNuvlxw7s9XqbQuIUreCaYW5Ivq/q5XPf1s369VrHXbgB2FP1H/Sx1zWMVQ+cYwe/nNkp18tqDTat
        macxWrMO6waz2w43ub2h2a6W1votreOQ4Wmset3rDDepnr1Zd9xb74Wxx0y4ATgg9R/0dZ+Mp2p9kt40
        a9PLT9v1uq2Bsw4dORiOMXUwq7ezbpCtXTXcbBM46zaG+tvq25iZr1697nWHmynHvV42a8ysTRJuAA5I
        6xqFKTME67RmX6aoZ31ag/yUwa+0T+Fmm8BQtzHU33q/sqao173NcFMut2nZmnADcECGbtHOGZAcqPIP
        /NhPv7V6UJ8y2KQxA1ur/2NMHczG9GXILoeb+rTP1GuuynWzriPc5LU2eRyyxp6Was30TTm9NvX9AMAO
        a/1Rb1UOejmw9IFnjDp4ZBu5/tiqZ5VaA1suVy6TNebUV+v6jHX7ldsulx0aZFtafRzSej1y/anqNob6
        O3a5IfX6Y/ua+5nL5nskt1mHmKEa6t9Vj1tr/XXvBwB2XOtW4E3V37Wz7rbeHIha625brYGtNShtGqDz
        U359yiv/vU69L5u2URJu/kf+vj72U2qof8INAH8kb6luXX+zqXKgGhoE6kBw1RoarFr9zm3nhbHlKbUM
        YnkdUGtw3XQKo96XKSEg+12umzXkUMNNvg5jZ2fKql+rof4JNwAMykCQp2zqwXxd5QDUmsGZ0saYGhqs
        WrczT6mh/pfqfZkSAoSb9jHIytNS+bt8DXPfs8pAOva4X/W4tdbPnwFwgPqLO3OgyIGoNeuR1XpybD0w
        5Sf3m9K6M2tM5f6MuUZn7CDb0hrYh1x1kO7VbQz1d+xyQ+r1h/pav2+u+7gLNwBsLT9Vt67RaQ06297J
        tK3WADVU/cXN5SzBOmMH2ZZdDjf1Kb2pAbRcN6vV16vs09jjniG8XC5ryvOBhBsARg2KrUF9bJjYRn0H
        VG6/rjz9MfZBgqVDDTf1fmVNUa/b6mvrKzLGBocpx71cbtOyNeEGgD8adPI0Q611qijDxU2oP7m3+nMV
        rdmqsXY53LT2a8qgXq/b6mtr/28i3LQuLB9LuAFg1KDTOlWwbnC6inrWJk+JXafWAL3pIuTeLoebVgDd
        dOdYqV631ddtv9w0jXmf9VpBLfdvDOEG4I7L0zr1QDAUJlq3/04ZPMeqB8HrDjetO7LGXNORAWjKtUfP
        O9y0AmjWmFN3rfdBq6+tfRr7HqjfPzk7M6QV1HL5MadCr3LqDIAdk4N2Dnw5KOUf+PyDntUaEHIwy+Xq
        O1+yhj4htwacrBx0Mhzk7/ttDlVuc9Mn8FaAyAE096/V5tTrbvJ41O1nZd/qGZxsO/vb6lNfQ7Jv9bKt
        wLBJ3ca6GY86GGbla5zvh/J9kPuZxzNft9YpoKxWX9cdu/p9lvufxy5fu9b7LGvovZBttdbJvtYzRf1r
        tG472RcA9lAOMK0/7FNq3afp1Jq9mVrrBueUA1VrvTGVbdcDeUsOhK31t6khtxFuWtvctob6ep3HLivf
        U62Aeh3v576EG4A9ddXBID/1bpoFydAw9El/bLXuxqpddQDdtC85czH0KX9qDbmNcJPqa5a2raG+Xuex
        62sofFxHmM4SbgD21FXCTQ6Ym4JNLwPOVcPHOtmPqwaorByA183g5HbGDtK5XB7fVnAYclvhJk15L+Sx
        bl2nsq6vU45dVr5f8ngM9WsofOTrt+6UYF15bFqvkXADsMfyj3hek5CDSA4o+ce+9ek3B6Z+IBgbamr5
        CT4HxWynFUbyZ/m7HJyyP/11QFMDR9/XoVoXhHL/1sm+9PtQbzd/lsewvMYjT5mV284akvtSLzt0jck6
        dRub9qmXr08um+uU+9Ufz3xNyte+3EbWpr6Wx67Vfm47j139epfvm/6Ybwof+ft8Ler3cr72+f7K9rLd
        1Dru277HAeBKchCsA0YOZuvCUC+Xac0mjTkFBgBwI/KTfhlMMuiMCTal1iwOAMCtqINJzsRMlacgyjay
        AABuRR1K1l3QOkS4AQB2Rh1Kxl44W6pnf/LfAAC3or6YeOo1N62H/21zagsA4Fq0nmeSdzvVj9uv5S3A
        U5+fAgBw4zKItAJKX3mKqXx2Sev6mrIyLAEA3KrWs2q2qbHPxwEAuHH5tNn6+puxlettc5cVAMCNy2tt
        +q8PaD2cLytnaPL3GWg2XZsDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADPvax
        /wRd5bSB4yczggAAAABJRU5ErkJggg==
</value>
  </data>
</root>